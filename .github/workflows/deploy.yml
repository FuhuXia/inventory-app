---
name: deploy

on:
  push:
    branches:
      - main


jobs:
  vendor:
    name: vendor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: vendor dependencies
        run: ./vendor-requirements.sh
      - uses: actions/upload-artifact@v2
        with:
          name: python-vendored
          path: vendor/
          if-no-files-found: error

  create-cloudgov-services-staging:
    name: create services (staging)
    environment: staging
    runs-on: ubuntu-latest
    container:
      image: cloudfoundry/cli:8
      env:
        org: gsa-datagov
        space: staging
        user: ${{secrets.CF_SERVICE_USER}}
        password: ${{secrets.CF_SERVICE_AUTH}}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: auth
        run: ./cfauth.sh
      - name: create services
        run: ./create-cloudgov-services.sh
  deploy-staging:
    concurrency: staging
    name: deploy (staging)
    environment: staging
    runs-on: ubuntu-latest
    needs:
      - vendor
      - create-cloudgov-services-staging
    env:
      APP_URL: https://inventory-stage-datagov.app.cloud.gov
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: python-vendored
      - name: deploy-inventory
        uses: usds/cloud-gov-cli@master
        with:
          command: push inventory --vars-file vars.staging.yml --strategy rolling
          org: gsa-datagov
          space: staging
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: smoke test
        run: bin/smoke.sh

  create-cloudgov-services-production:
    name: create services (production)
    environment: production
    runs-on: ubuntu-latest
    container:
      image: cloudfoundry/cli:8
      env:
        org: gsa-datagov
        space: prod
        user: ${{secrets.CF_SERVICE_USER}}
        password: ${{secrets.CF_SERVICE_AUTH}}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: auth
        run: ./cfauth.sh
      - name: create services
        run: ./create-cloudgov-services.sh  
  deploy-production:
    concurrency: production
    name: deploy (production)
    environment: production
    runs-on: ubuntu-latest
    needs:
      - deploy-staging
      - create-cloudgov-services-production
    env:
      APP_URL: https://inventory-prod-datagov.app.cloud.gov
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: python-vendored
      - name: deploy-inventory
        uses: usds/cloud-gov-cli@master
        with:
          command: push inventory --vars-file vars.production.yml --strategy rolling
          org: gsa-datagov
          space: prod
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: smoke test
        run: bin/smoke.sh